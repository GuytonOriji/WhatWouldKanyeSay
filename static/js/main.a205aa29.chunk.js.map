{"version":3,"sources":["img/westkanye.jpg","img/kayneThinkingFace.jpg","logo.svg","header/Header.js","actions/index.js","center/Kanye.js","center/Quotes.js","center/index.js","reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","navbar","borderBottom","display","alignItems","backgroundColor","nav","flex","justifyContent","fontSize","fontWeight","btn","connect","state","needsToFetch","kanyeMadOrNah","fetchOrNah","dispatch","type","axios","get","then","kayne","console","log","setTimeout","payload","data","quote","catch","err","props","Navbar","style","className","Nav","Button","onClick","e","preventDefault","immg","height","width","slowmo","boxShadow","Card","CardBody","CardTitle","CardSubtitle","src","pic","alt","CardText","notes","error","Alert","color","sheet","justPushing","marginTop","Kayne","Container","Kanye","initialState","reducer","action","store","createStore","applyMiddleware","thunk","App","KanyeFaceHmmm","KanyeFaceUuhhhhhh","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a205aa29.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/westkanye.f09436cb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kayneThinkingFace.89e03666.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\nimport {Navbar,Nav,Button } from 'reactstrap'\nimport {connect} from 'react-redux'\nimport {fetchOrNah} from '../actions/'\n\nconst navbar = {\n\t\tborderBottom:\"solid #000\",\n\t\tdisplay:\"flex\",\n\t\talignItems:\"center\",\n\t\tbackgroundColor: '#553d67'\n}\n\n\nconst nav = {\n\t\tflex:\"1\",\n\t\tdisplay:\"flex\",\n\t\tjustifyContent:\"space-between\",\n\t\talignItems:\"center\",\n\t\tfontSize:\"1.5rem\",\n\t\tfontWeight:\"bolder\"\n}\n\nconst btn = {\n\tbackgroundColor: '#f64c72',\n\tfontWeight:\"bolder\"\n}\n\n\n\n\tconst Header =(props)=>{\n\t\t\tconsole.log('header props',props.kanyeMadOrNah)\n\n\n\n\t\t\tconst callKanye = e =>{\n\t\t\t\te.preventDefault()\n\t\t\t\t\tprops.fetchOrNah()\n\t\t\t}\n\n\t\treturn(\n\t\t\t<Navbar style={navbar}>\n\t\n\t\t\t\t<div style={nav}  className=\"navbar\" >\n\t\t\t\t<span className=\"headText\">What Would Kayne Say?....</span>\n\t\t\t\t<Nav>\n\n\t\t\t\t<div>\n\t\t\t\t<Button onClick={callKanye} style={btn}>See a Kanye Note</Button>\n\t\t\t\t</div>\n\t\t\t\t</Nav>\n\t\t\t\t</div>\n\t\t\t</Navbar>\n\n\t\t\t)\n\n}\n\nconst mapStateToProps = state =>{\n\t\treturn {\n\t\t\tneedsToFetch:state.needsToFetch,\n\t\t\tkanyeMadOrNah:state.kanyeMadOrNah\n\t\t}\n}\n\n\nexport default connect(\n\tmapStateToProps,\n\t{fetchOrNah}\n\t)(Header)","import axios from 'axios'\nexport const FETCHING = 'FETCHING'\nexport const FETCHED = 'FETCHED'\nexport const ERR = 'ERR'\t\n\n\n\n\n\n\n\nexport const fetchOrNah = () => dispatch =>{\n\t\tdispatch({type:FETCHING})\n\n\n\t\taxios.get(\"https://api.kanye.rest/\").then(kayne=>{\n\t\t\t\tconsole.log(kayne)\n\t\t\t\tsetTimeout(()=>{dispatch({type:FETCHED, payload:kayne.data.quote})},700)\n\t\t}).catch(err=>{\n\t\t\tconsole.log(err)\n\t\t\tdispatch({type:ERR,payload:err})\n\t\t})\n}","import React, {useState,useEffect} from 'react';\nimport {\n  Card, CardImg, CardText, CardBody, CardLink,\n  CardTitle, CardSubtitle\n} from 'reactstrap';\nimport {connect} from 'react-redux'\n\nconst immg = {\n  flex:\"1\",\n  height:\"100%\",\n  width:\"100%\",\n}\n\nconst slowmo = {\nbackgroundColor: '#245282',\nboxShadow:'0 0 10px #000'\n}\n\nconst Kayne = (props) => {\nconsole.log('im kanye',props)\n  \n\n  return (\n      <Card style={slowmo}>\n        <CardBody>\n          <CardTitle>Wassup Man</CardTitle>\n          <CardSubtitle>Im Kanye West</CardSubtitle>\n        </CardBody>\n        <img width=\"100%\" src={!props.kanyeMadOrNah?props.pic[0]:props.pic[1]} alt=\"Card image cap\" style={immg}/>\n        <CardBody>\n          {!props.kanyeMadOrNah?(<CardText>An people always wanna say I'm crazy, so Ima shut up an write my s#!+% down and\n                    if someone wants to know.....they'll read it. &#128397;</CardText>):\n          (<CardText>YOU KNOW WHAT!?!?!?</CardText>)}\n        </CardBody>\n      </Card>\n  );\n};\n\n\nconst mapStateToProps = state =>{\n      return {\n        kanyeMadOrNah:state.kanyeMadOrNah,\n\n      }\n}\n\nexport default connect(\n    mapStateToProps,\n    {}\n\n  )(Kayne);\n","import React from 'react';\nimport { Alert } from 'reactstrap';\nimport {connect} from 'react-redux'\n\n\n\n\n\nconst notes ={\n\n}\n\n\nconst Quotes = props => {\n\n  console.log('quotes comp',props)\n  return (\n    <div style={notes}>\n \n        <Alert color={props.kanyeMadOrNah?\"danger\":\"info\"}>\n        <h4 className=\"alert-heading\">My Notes To Self</h4>\n        <address>\n        <hr />\n        {\n          !props.quote?\n          (\n              <span>......hmmm Im thinking</span>\n            )\n            :\n            (\n             <span> &#128397; {props.quote} </span>\n              )\n          \n        }\n        <hr />\n        </address>\n        <hr />\n        <p className=\"mb-0\">\n         <sup>PS-</sup>\n        <small>do not leave your notes here...kim might see this so erase the last one and write a new one...</small>\n         <sub>-Genius</sub>\n        </p>\n      </Alert>\n    </div>\n  );\n};\n\n\nconst mapStateToProps = state =>{\n  return {\n    quote:state.quote,\n    error:state.error,\n    kanyeMadOrNah:state.kanyeMadOrNah\n  }\n}\n\nexport default connect(\nmapStateToProps,\n{}\n  )(Quotes);\n\n","import React from 'react';\nimport  Kanye from './Kanye'\nimport  Quotes from './Quotes'\nimport {Container, Row} from 'reactstrap'\n\n\n\n\nconst sheet = {\n\t\tflex:\"1\",\n\t\tdisplay:\"flex\",\n\t\twidth:\"100%\",\n\t\tjustifyContent:\"space-between\",\n\t\talignItems:\"center\",\n\t\tfontSize:\"1.5rem\",\n\t\tfontWeight:\"bolder\"\n}\n\nconst justPushing ={\n\tmarginTop:\"50px\"\n}\n\n\nconst Kayne = (props) => {\nconsole.log(props)\n\n  return (\n    <Container style={justPushing}>\n      <div style={sheet} className=\"sheet\">\n      \t<Kanye pic={props.pic}/>\n      \t<Quotes />\n      </div>\n    </Container>\n  );\n};\n\nexport default Kayne;\n","import {FETCHED,FETCHING,ERR} from '../actions/'\n\n\nconst initialState={\n\tquote:\"\",\n\tneedsToFetch:false,\n\terror:\"\",\n\tkanyeMadOrNah:false\n}\n\n\n\nconst reducer = (state = initialState, action) =>{\n\n\t\t\tswitch(action.type){\n\t\t\t\tcase FETCHING:\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...state,\n\t\t\t\t\t\tneedsToFetch:true,\n\t\t\t\t\t\tkanyeMadOrNah:false,\n\t\t\t\t\t}\n\n\t\t\t\tcase FETCHED:\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tquote:action.payload,\n\t\t\t\t\tneedsToFetch:false,\n\t\t\t\t\tkanyeMadOrNah:true,\n\t\t\t\t}\n\n\t\t\t\tcase ERR:\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\terror:action.payload,\n\t\t\t\t\tneedsToFetch:false,\n\t\t\t\t\tkanyeMadOrNah:false\n\t\t\t\t}\n\n\t\t\t\tdefault:\n\t\t\t\treturn state\n\t\t\t}\n}\n\n\n\n\n\nexport default reducer","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport KanyeFaceHmmm from './img/westkanye.jpg'\nimport KanyeFaceUuhhhhhh from './img/kayneThinkingFace.jpg'\nimport Header from './header/Header'\nimport KayneSpot from './center/'\nimport {createStore, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport reducer from './reducers/'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\n\n\n\nconst store = createStore(reducer,applyMiddleware(thunk))\n\n\nconsole.log(store)\n\nfunction App() {\n\n\n  return (\n    <Provider store={store}>\n    <div className=\"App\">\n    <Header/>\n    <KayneSpot  pic={[KanyeFaceHmmm,KanyeFaceUuhhhhhh]}/>\n    </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}